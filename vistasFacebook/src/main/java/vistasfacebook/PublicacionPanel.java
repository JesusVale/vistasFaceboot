/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package vistasfacebook;

import comVista.IComunicadorVista;
import entidades.Comentario;
import entidades.Publicacion;
import entidades.Usuario;
import events.ConsultarComentariosEvent;
import events.ConsultarUsuarioEvent;
import events.RegistrarComentarioEvent;
import interfaces.IConsultarComentariosObserver;
import interfaces.IConsultarUsuarioObserver;
import interfaces.IRegistrarComentarioObserver;
import java.awt.Image;
import java.io.File;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.List;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import peticiones.PeticionComentario;
import peticiones.PeticionComentarios;

import peticiones.PeticionUsuario;

/**
 *
 * @author jegav
 */
public class PublicacionPanel extends javax.swing.JPanel implements IConsultarUsuarioObserver, IRegistrarComentarioObserver, IConsultarComentariosObserver {

    private Publicacion publicacion;
    private Usuario usuario;
    private IComunicadorVista comunicadorVista;

    /**
     * Creates new form PublicacionPanel
     */
    public PublicacionPanel(Publicacion publicacion, Usuario usuario, IComunicadorVista comunicadorVista) {
        initComponents();
        //this.setSize(655, 532);

        this.comunicadorVista = comunicadorVista;
        this.publicacion = publicacion;
        this.usuario = usuario;
        if (publicacion.getUsuario() != usuario.getId()) {
            this.editarBtn.setVisible(false);
            this.deleteBtn.setVisible(false);
        }
        RegistrarComentarioEvent.getInstance().suscribirse(this);
        ConsultarUsuarioEvent.getInstance().suscribirse(this);
        ConsultarComentariosEvent.getInstance().suscribirse(this);
        comunicadorVista.consultarComentariosPorId(publicacion.getId());
        comunicadorVista.cosultarUsuarioPorId(publicacion.getUsuario());

    }

    public PublicacionPanel() {
        initComponents();

    }

    private void llenarPanel(Usuario usuarioPublicacion) {
        this.nombreLbl.setText(usuarioPublicacion.getNombre());
        this.descripcionLbl.setText(publicacion.getTexto());
        SimpleDateFormat fechaFormat = new SimpleDateFormat("dd/MM/yyyy");
        String fecha = fechaFormat.format(publicacion.getFechaCreacion().getTime());
        this.fechaLbl.setText(fecha);

        if (publicacion.getImagen() == null) {
            this.imageLbl.setSize(0, 0);
            return;
        }
        Image imagenPublicacion = new ImageIcon(publicacion.getImagen()).getImage();
        Image imagenEscalada = imagenPublicacion.getScaledInstance(534, 239, Image.SCALE_SMOOTH);
        this.imageLbl.setIcon(new ImageIcon(imagenEscalada));

    }

    private void llenarComentarios(List<Comentario> comentarios) {
        if(comentarios==null) return;
        this.comentarioPane.setText("");
        for (Comentario comentario : comentarios) {
            this.comentarioPane.insertComponent(new ComentarioPanel(comentario, usuario));
        }
    }

    private void llenarComentarios(Comentario comentario) {
        this.comentarioPane.insertComponent(new ComentarioPanel(comentario, usuario));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        nombreLbl = new javax.swing.JLabel();
        descripcionLbl = new javax.swing.JLabel();
        fechaLbl = new javax.swing.JLabel();
        txtComentario = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        btnRegistrarComentario = new javax.swing.JButton();
        imageLbl = new javax.swing.JLabel();
        editarBtn = new javax.swing.JButton();
        deleteBtn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        comentarioPane = new javax.swing.JTextPane();

        setBackground(new java.awt.Color(255, 255, 255));
        setPreferredSize(new java.awt.Dimension(620, 625));

        jPanel1.setBackground(new java.awt.Color(241, 250, 238));
        jPanel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel1.setPreferredSize(new java.awt.Dimension(607, 603));

        nombreLbl.setFont(new java.awt.Font("Nirmala UI Semilight", 1, 18)); // NOI18N
        nombreLbl.setText("Nombre Usuario");

        descripcionLbl.setText("Hola Soy Una Publicacion");

        fechaLbl.setFont(new java.awt.Font("Segoe UI", 0, 10)); // NOI18N
        fechaLbl.setText("19/11/2022");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel2.setText("Comentarios");

        btnRegistrarComentario.setText("Enviar");
        btnRegistrarComentario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegistrarComentarioActionPerformed(evt);
            }
        });

        editarBtn.setBackground(new java.awt.Color(37, 161, 142));
        editarBtn.setText("Editar");
        editarBtn.setBorder(null);

        deleteBtn.setBackground(new java.awt.Color(37, 161, 142));
        deleteBtn.setText("Borrar");
        deleteBtn.setBorder(null);
        deleteBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteBtnActionPerformed(evt);
            }
        });

        jScrollPane1.setBorder(null);
        jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        comentarioPane.setBackground(new java.awt.Color(241, 250, 238));
        comentarioPane.setBorder(null);
        jScrollPane1.setViewportView(comentarioPane);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(37, 37, 37)
                        .addComponent(descripcionLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 521, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addComponent(imageLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 534, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(246, 246, 246)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addComponent(txtComentario, javax.swing.GroupLayout.PREFERRED_SIZE, 450, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(12, 12, 12)
                        .addComponent(btnRegistrarComentario))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 555, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addGap(1, 1, 1)
                                    .addComponent(fechaLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(nombreLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(246, 246, 246)
                                    .addComponent(editarBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(40, 40, 40)
                                    .addComponent(deleteBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addGap(18, 18, 18))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(deleteBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(nombreLbl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(editarBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(8, 8, 8)
                .addComponent(fechaLbl)
                .addGap(20, 20, 20)
                .addComponent(descripcionLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addComponent(imageLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addComponent(jLabel2)
                .addGap(11, 11, 11)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(txtComentario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btnRegistrarComentario))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(18, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 599, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(15, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 601, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(41, 41, 41))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void deleteBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteBtnActionPerformed
        int verificador = JOptionPane.showConfirmDialog(null, "¿Estas seguro de eliminar esta publicacion?");
        if (verificador == 0) {
            comunicadorVista.eliminarPublicacion(publicacion);
            File fotoEliminada = new File(publicacion.getImagen());
            fotoEliminada.delete();
        }
    }//GEN-LAST:event_deleteBtnActionPerformed

    private void btnRegistrarComentarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegistrarComentarioActionPerformed
        Comentario comentario = new Comentario(usuario.getId(),publicacion.getId(),Calendar.getInstance(),this.txtComentario.getText());
        comunicadorVista.RegistrarComentario(comentario);
    }//GEN-LAST:event_btnRegistrarComentarioActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnRegistrarComentario;
    private javax.swing.JTextPane comentarioPane;
    private javax.swing.JButton deleteBtn;
    private javax.swing.JLabel descripcionLbl;
    private javax.swing.JButton editarBtn;
    private javax.swing.JLabel fechaLbl;
    private javax.swing.JLabel imageLbl;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel nombreLbl;
    private javax.swing.JTextField txtComentario;
    // End of variables declaration//GEN-END:variables

    @Override
    public void onConsultarUsuario(PeticionUsuario peticionUsuario) {
        if (publicacion.getUsuario() == peticionUsuario.getUsuario().getId()) {
            llenarPanel(peticionUsuario.getUsuario());
        }
    }

    @Override
    public void onRegistrarComentario(PeticionComentario respuesta) {
        if (publicacion.getId() == respuesta.getComentario().getPublicacion()) {
            llenarComentarios(respuesta.getComentario());
        }
    }

    @Override
    public void onConsultarComentarios(PeticionComentarios peticionComentarios) {
        if(peticionComentarios.getComentarios().isEmpty()){
            return;
        }
        if(publicacion.getId() == peticionComentarios.getComentarios().get(0).getId()){
            llenarComentarios(peticionComentarios.getComentarios());
        }
    }
}
